[
  {
    "objectID": "methods.html",
    "href": "methods.html",
    "title": "Methods",
    "section": "",
    "text": "We employed two Gene Fusions(GFs) detection tools, including arriba, STAR-Fusion, to identify, parse, and annotate GFs junctions within each sample, using the human genome version hg38 as the reference. In our pursuit of biologically robust GFs identification within each cohort, we undertook an approach metafusion that amalgamated results from two GFs detection tools. Firstly, we exclusively retained Fusions located on chromosomes 1 to 22, as well as the X and Y chromosomes. Secondly, GFs were mandated to exhibit genomic overlap with gene regions as defined in the reference genome annotation file, specifically “gencode.v34.annotation.gtf.”. Thirdly to ensure the precision and recall in GFs prediction with different tools, one can either rely on consensus predictions or all predctions and choosing junction-crossing reads and reads mates which flank (span) the breakpoint. Fourthly, we offer FusionAnnotator to identify and prioritize GFs that have been previously reported in cancer or normal samples. Lastly, the detected data can be divided into Cis-SAGes and other categories to further explore the debate on what should be considered true fusion RNAs. This meticulous methodological approach was instrumental in ensuring the acquisition of biologically sound and reliable GFs datasets, thereby fortifying the integrity of our analysis within each cohort. This analysis facilitated comparisons between patient groups, such as those who responded to checkpoint immunotherapy versus non-responders, as well as between samples collected before and during ICB treatment."
  },
  {
    "objectID": "methods.html#gene-fusions-identification-and-differential-expression-analysis",
    "href": "methods.html#gene-fusions-identification-and-differential-expression-analysis",
    "title": "Methods",
    "section": "",
    "text": "We employed two Gene Fusions(GFs) detection tools, including arriba, STAR-Fusion, to identify, parse, and annotate GFs junctions within each sample, using the human genome version hg38 as the reference. In our pursuit of biologically robust GFs identification within each cohort, we undertook an approach metafusion that amalgamated results from two GFs detection tools. Firstly, we exclusively retained Fusions located on chromosomes 1 to 22, as well as the X and Y chromosomes. Secondly, GFs were mandated to exhibit genomic overlap with gene regions as defined in the reference genome annotation file, specifically “gencode.v34.annotation.gtf.”. Thirdly to ensure the precision and recall in GFs prediction with different tools, one can either rely on consensus predictions or all predctions and choosing junction-crossing reads and reads mates which flank (span) the breakpoint. Fourthly, we offer FusionAnnotator to identify and prioritize GFs that have been previously reported in cancer or normal samples. Lastly, the detected data can be divided into Cis-SAGes and other categories to further explore the debate on what should be considered true fusion RNAs. This meticulous methodological approach was instrumental in ensuring the acquisition of biologically sound and reliable GFs datasets, thereby fortifying the integrity of our analysis within each cohort. This analysis facilitated comparisons between patient groups, such as those who responded to checkpoint immunotherapy versus non-responders, as well as between samples collected before and during ICB treatment."
  },
  {
    "objectID": "methods.html#response-and-response2",
    "href": "methods.html#response-and-response2",
    "title": "Methods",
    "section": "Response and Response2",
    "text": "Response and Response2\nWe gathered and processed patient ‘Response’ data from various cohorts. However, due to inconsistencies among these cohorts, such as the usage of different terms like CR, PR, SD, PD, R, NR, DCB, and NDB, we harmonized the response variable based on the timing of treatment and treatment response. As a result, we introduced a new variable called ‘Response2’ with four distinct categories: Pre-R, Pre-NR, On-R, and On-NR. In cases where response data was not available, we assigned the category NE."
  },
  {
    "objectID": "methods.html#cancer-type-abbreviation",
    "href": "methods.html#cancer-type-abbreviation",
    "title": "Methods",
    "section": "Cancer Type Abbreviation",
    "text": "Cancer Type Abbreviation\n\n\n\n\n\n\n\nAbbr.\nDescription\n\n\n\n\nBLCA\nBladder urothelial carcinoma\n\n\nSKCM\nSkin cutaneous melanoma\n\n\nKIRC & CCRCC\nKidney renal clear cell carcinoma\n\n\nHNSC & HNSCC\nHead and neck squamous cell carcinoma\n\n\nNSCLC\nNon-small cell lung cancer, including lung adenocarcinoma and lung squamous cell carcinoma\n\n\nSCLC\nSmall cell lung cancer\n\n\nSARC\nSarcoma\n\n\nBRCA\nBreast cancer\n\n\nGBM\nGlioblastoma Multiforme\n\n\nSTAD\nStomach Adenocarcinoma\n\n\nSGC\nSalivary gland cancer\n\n\nLUSC\nLung Squamous Cell Carcinoma\n\n\nMESO\nMesothelioma\n\n\nPCPG\nPheochromocytoma and Paraganglioma\n\n\nLIHC\nLiver Hepatocellular Carcinoma\n\n\nPRAD\nProstate Adenocarcinoma\n\n\nACC\nAdrenocortical Carcinoma\n\n\nTGCT\nTesticular Germ Cell Tumors\n\n\nPAAD\nPancreatic Adenocarcinoma\n\n\nUCEC\nUterine Corpus Endometrial Carcinoma\n\n\nTHCA\nThyroid carcinoma\n\n\nCESC\nCervical squamous cell carcinoma and endocervical adenocarcinoma\n\n\nESCA\nEsophageal carcinoma\n\n\nREAD\nRectum adenocarcinoma\n\n\nOV\nOvarian Serous Cystadenocarcinoma\n\n\nCHOL\nCholangiocarcinoma\n\n\nUCS\nUterine Carcinosarcoma\n\n\nLUAD\nLung Adenocarcinoma\n\n\nLGG\nBrain Lower Grade Glioma\n\n\nHGSC\nHigh-Grade Serous Carcinoma\n\n\nLSCC\nLung Squamous Cell Carcinoma\n\n\nPDAC\nPancreatic Ductal Adenocarcinoma\n\n\nTHYM\nThymoma\n\n\nKICH\nKidney Chromophobe\n\n\nKIRP\nKidney Renal Papillary Cell Carcinoma\n\n\nCOAD\nColon Adenocarcinoma\n\n\nLAML & AML\nAcute Myeloid Leukemia\n\n\nDLBC\nLymphoid Neoplasm Diffuse Large B-cell Lymphoma\n\n\nALL\nAcute lymphocytic leukemia\n\n\nAML-IF\nAcute Myeloid Leukemia, Induction Failure Subproject\n\n\nNBL\nNeuroblastoma\n\n\nOS\nOsteosarcoma\n\n\nES\nEwing sarcoma\n\n\nWT\nWilms tumor\n\n\nCCSK\nClear Cell Sarcoma of the Kidney\n\n\nRT\nKidney, Rhabdoid Tumor\n\n\nCCSK\nCNS, ependymoma\n\n\nMRT\nCNS, rhabdoid tumor\n\n\nCCSK\nCNS, medulloblastoma\n\n\nCCSK\nNHL, anaplastic large cell lymphoma\n\n\nCCSK\nNHL, Burkitt lymphoma (BL)\n\n\nCCSK\nRhabdomyosarcoma\n\n\nCCSK\nSoft tissue sarcoma, non-rhabdomyosarcoma\n\n\nCCSK\nCNS, other\n\n\nB-ALL\nPrecursor B-cell lymphoblastic leukemia\n\n\nGNB\nGanglioneuroblastoma"
  },
  {
    "objectID": "methods.html#clinical-data-preprocessing",
    "href": "methods.html#clinical-data-preprocessing",
    "title": "Methods",
    "section": "Clinical data preprocessing",
    "text": "Clinical data preprocessing\n\nTCGA\nlibrary(data.table)\nlibrary(dplyr)\n\n# load(\"/home/data2/Projects/Fusion/unclean/TCGA_ALL_clinical.rdata\")\n#\n# TCGA_ALL_clinical |&gt;\n#   rename(Patient_ID = bcr_patient_barcode,\n#          Age = age_at_initial_pathologic_diagnosis,\n#          Sex = gender,\n#          Race = race,\n#          )\n\n# [Discrepancy] [Not Applicable]  [Not Available]\n# [Discrepancy] [Not Available]       [Unknown]\n# # [Discrepancy]                                        [Not Applicable]\n# 29                                                     105\n# [Not Available]                                         [Not Evaluated]\n# 5140                                                       4\n# [Unknown]\n\n\nlibrary(UCSCXenaShiny)\n\ntable(tcga_clinical_fine$Stage_ajcc)\ntcga_clinical\n\ntcga_clinical_fine\ntcga_genome_instability\ntcga_purity\ntcga_subtypes\ntcga_surv\n\nnrow(tcga_clinical_fine)\nnrow(unique(tcga_clinical_fine))\n\ntcga_clinical = unique(tcga_clinical_fine) |&gt;\n  left_join(tcga_surv, by = c(\"Sample\"=\"sample\")) |&gt;\n  left_join(tcga_purity, by = c(\"Sample\"=\"sample\"))\n\ntcga_clinical[551, ]$Sample\n\nsum(startsWith(tcga_genome_instability$sample, \"TCGA\"))\n\ntcga_clinical = tcga_clinical |&gt;\n  left_join(tcga_genome_instability[startsWith(tcga_genome_instability$sample, \"TCGA\") & !duplicated(tcga_genome_instability$sample), ],  by = c(\"Sample\"=\"sample\")) |&gt;\n  #left_join(tcga_genome_instability[duplicated(tcga_genome_instability$sample), ],  by = c(\"Sample\"=\"sample\")) |&gt;\n  left_join(tcga_subtypes,  by = c(\"Sample\"=\"sampleID\"))\n\n\nsum(is.na(tcga_clinical$Sample))\nsum(duplicated(tcga_clinical$Sample))\n\ntcga_clinical[duplicated(tcga_clinical$Sample), ]$Sample\n\ntcga_clinical.final = tcga_clinical[!duplicated(tcga_clinical$Sample), ] |&gt;\n  rename(Sample_ID = Sample, Sex = Gender, OS_Time = OS.time, OS_Status = OS, DSS_Time = DSS.time, DSS_Status = DSS, DFS_Time = DFI.time, DFS_Status = DFI, PFS_Time = PFI.time, PFS_Status = PFI) |&gt;\n  select(-cancer_type) |&gt;\n  mutate(Sex = ifelse(Sex == \"FEMALE\", \"F\", \"M\"),\n         Patient_ID = substr(Sample_ID, 1, 12))\n\nsum(is.na(tcga_clinical.final$Sample_ID))\nsum(is.na(tcga_clinical.final$Cancer))\nsum(duplicated(tcga_clinical.final$Sample_ID))\n\ntcga_clinical.final = tcga_clinical.final |&gt;\n  select(Patient_ID, Sample_ID, everything()) |&gt;\n  as.data.table()\n\ntcga_clinical.final\n\nfwrite(tcga_clinical.final, file = \"/home/data2/Projects/Fusion/fusiondb/Clininfo/TCGA_info.tsv\", sep = \"\\t\")\n\n\nCPTAC\nlibrary(data.table)\n\n\n# Clinical data from CPTAC paper ------------------------------------------\n\n\ncli_list = fs::dir_ls(\"CPTAC_Clinical_meta_data_v1/\")\n\ncli = purrr::map(cli_list, fread) |&gt; rbindlist(fill = TRUE, use.names = TRUE)\ncolnames(cli)\n# 问题，这个第 2 行要跳过才行\n# 另外这个同时包含 CPTAC-2/3 的样本，但总数少一些\n\ncli2 = purrr::map(cli_list, function(x) {\n  # 由于列名也不同，这里读两次，一次读 colname，一次读数据\n  data1 = fread(x)\n  data2 = fread(x, skip = 2, header = FALSE)\n  # 更新列名\n  colnames(data2) = colnames(data1)\n  data2$Cancer = stringr::str_remove(basename(x), \"_meta.txt\")\n  data2 |&gt; as.data.table()\n}) |&gt; rbindlist(fill = TRUE, use.names = TRUE)\n#colnames(cli2) = colnames(cli)\ncolnames(cli2)\n\ncli2[Tumor == \"Yes\" & Normal == \"Yes\"] # 这个是标记患者是否同时 tumor / normal sample\n\n\ncli_list2 = fs::dir_ls(\"meta_data_BCM/\")\n\ncli3 = purrr::map(cli_list2, function(x) {\n  # 由于列名也不同，这里读两次，一次读 colname，一次读数据\n  data1 = fread(x)\n  data2 = fread(x, skip = 2, header = FALSE)\n  # 更新列名\n  colnames(data2) = colnames(data1)\n  data2$Cancer = stringr::str_remove(basename(x), \"_meta.txt\")\n  data2 |&gt; as.data.table()\n}) |&gt; rbindlist(fill = TRUE, use.names = TRUE)\ncolnames(cli3)\n\nall.equal(cli2, cli3)\nall.equal(sort(colnames(cli2)), sort(colnames(cli3)))\n\ncli4 = cli3[, colnames(cli2), with = FALSE]\nall.equal(cli2, cli4)\nidentical(cli2, cli4)\n\ndplyr::setdiff(cli2, cli4) |&gt; View()\ndplyr::setdiff(cli4, cli2) |&gt; nrow()\n\n# rbind(cli2[idx == \"01OV007\"],\n#       cli4[idx == \"01OV007\"]) |&gt; View()\n\n# 2 个数据源目录的文件基本没有区别\n\ncli.final = cli2 |&gt;\n  dplyr::rename(\n    Patient_ID = idx,\n    OS_Status = OS_event,\n    OS_Time = OS_days,\n    PFS_Status = PFS_event,\n    PFS_Time = PFS_days\n  ) |&gt;\n  dplyr::mutate(\n    Sample_ID = Patient_ID,\n    Sex = ifelse(Sex == \"Female\", \"F\", \"M\")\n  ) |&gt;\n  dplyr::select(\n    Patient_ID, Sample_ID, Cancer, Age, Sex, OS_Time, OS_Status, PFS_Time, PFS_Status, dplyr::everything()\n  )\n  # dplyr::select(\n  #   - dplyr::starts_with(\"CIBERSORT\"), - dplyr::starts_with(\"xCell\")\n  # )\n\n\nfwrite(cli.final, file = \"CPTAC_cli_paper_combined.tsv\", sep = \"\\t\")\n\n# Clinical data from GDC --------------------------------------------------\n\n\nsystem(\"\ncd /home/data2/Projects/Fusion/unclean/gdc_cli/CPTAC\nmkdir CPTAC-3 CPTAC-2\ntar zxvf clinical.project-cptac-2.2024-08-07.tar.gz -C CPTAC-2\ntar zxvf clinical.project-cptac-3.2024-08-07.tar.gz -C CPTAC-3\n       \")\n\ncptac2 = fread(\"gdc_cli/CPTAC/CPTAC-2/clinical.tsv\")\ncptac3 = fread(\"gdc_cli/CPTAC/CPTAC-3/clinical.tsv\")\n\nwhich(colnames(cptac2) %in% \"residual_disease\")\nwhich(colnames(cptac3) %in% \"residual_disease\")\nall.equal(cptac2[[119]], cptac2[[192]])\nall.equal(cptac3[[119]], cptac3[[192]])\ncptac2[[192]] = NULL\ncptac3[[192]] = NULL\n\nsetdiff(cptac2$case_submitter_id, cli.final$Sample_ID)\nsetdiff(cptac3$case_submitter_id, cli.final$Sample_ID)\n# &gt; setdiff(cptac2$case_submitter_id, cli.final$Sample_ID)\n# [1] \"01OV049\"   \"26OV010\"   \"100004028\" \"05BR058\"   \"05BR055\"   \"17OV019\"   \"11BR069\"   \"02OV042\"   \"100004012\" \"05BR051\"   \"03BR012\"   \"02OV045\"   \"04OV041\"\n# [14] \"05BR052\"   \"05BR031\"   \"1488\"      \"11OV009\"   \"02OV040\"   \"01OV002\"   \"100002921\" \"22OV001\"   \"13OV004\"   \"100003304\" \"02OV035\"   \"01OV046\"   \"01OV045\"\n# [27] \"17OV034\"\n# &gt; setdiff(cptac3$case_submitter_id, cli.final$Sample_ID)\n# [1] \"C3N-02672\"                    \"C3L-01929\"                    \"C3N-02682\"                    \"C3N-02012\"                    \"C3N-02070\"\n# [6] \"C3N-02696\"                    \"C3L-02354\"                    \"C3N-03026\"                    \"C3L-01739\"                    \"C3N-02088\"\n# [11] \"C3L-04213\"                    \"C3N-03205\"                    \"C3L-04081\"                    \"C3N-03791\"                    \"C3L-03679\"\n# [16] \"C3L-02643\"                    \"C3N-04686\"                    \"C3L-01558\"                    \"C3L-03268\"                    \"C3L-01633\"\n# [21] \"C3L-02220\"                    \"C3N-02439\"                    \"C3N-02028\"                    \"C3N-03800\"                    \"C3L-04392\"\n# [26] \"C3L-02556\"                    \"C3N-02721\"                    \"C3L-01672\"                    \"C3L-00938\"                    \"C3L-02201\"\n# [31] \"C3N-02146\"                    \"C3N-02639\"                    \"C3N-03788\"                    \"C3L-03733\"                    \"C3L-04037\"\n# [36] \"C3N-01091\"                    \"C3L-02747\"                    \"C3N-01879\"                    \"C3N-02996\"                    \"C3N-02296\"\n# [41] \"C3L-02553\"                    \"C3L-03632\"                    \"C3N-03755\"                    \"GTEX-NPJ7-0011-R10A-SM-HAKXW\" \"C3L-02746\"\nlength(setdiff(cptac3$case_submitter_id, cli.final$Sample_ID))  # 586\n\n\nView(cptac2[case_submitter_id %in% setdiff(cptac2$case_submitter_id, cli.final$Sample_ID)])\nView(cptac3[case_submitter_id %in% setdiff(cptac3$case_submitter_id, cli.final$Sample_ID)])\n\ndata.table::fwrite(\n  cptac3[case_submitter_id %in% setdiff(cptac3$case_submitter_id, cli.final$Sample_ID)],\n  file = \"CPTAC3_non_included.tsv\", sep = \"\\t\"\n)\n\ncptac3\n\n\n# 根据 GDC 已有信息补全 paper 缺少的样本信息 ---------------------------------------------\n\n# 可能标记了 cancer type 的列\n# primary_diagnosis site_of_resection_or_biopsy tissue_or_organ_of_origin\n\ncptac = rbind(cptac2, cptac3)[, .(case_submitter_id, primary_diagnosis, site_of_resection_or_biopsy, tissue_or_organ_of_origin)] |&gt; unique()\ncptac = dplyr::left_join(cptac, cli.final[, .(Sample_ID, Cancer)], by = c(\"case_submitter_id\"=\"Sample_ID\"))\n\nsetdiff(cli.final$Sample_ID, cptac$case_submitter_id)\n# 有 29 例不在 GDC 数据中\n\ntable(cptac$Cancer, cptac$primary_diagnosis) |&gt; pheatmap::pheatmap()\ntable(cptac$Cancer, cptac$site_of_resection_or_biopsy) |&gt; pheatmap::pheatmap()\ntable(cptac$Cancer, cptac$tissue_or_organ_of_origin) |&gt; pheatmap::pheatmap()\n\ntable(cptac$Cancer,\n      paste(\n        cptac$primary_diagnosis,\n        cptac$site_of_resection_or_biopsy,\n        cptac$tissue_or_organ_of_origin, sep = \"_\"\n      )) |&gt; pheatmap::pheatmap(show_colnames = FALSE)\n\n# 一个个处理\ncat(sub(\"_meta.txt\", \"\", basename(names(cli_list))))\n\ntypelist = sub(\"_meta.txt\", \"\", basename(names(cli_list)))\n# BRCA CCRCC COAD GBM HGSC HNSCC LSCC LUAD PDAC UCEC\nfor (i in typelist) {\n  message(\"check type \", i)\n  cptac_part = cptac |&gt; dplyr::filter(Cancer == i)\n  message(\"  primary_diagnosis\")\n  table(cptac_part$Cancer, cptac_part$primary_diagnosis) |&gt; print()\n  message(\"  site_of_resection_or_biopsy\")\n  table(cptac_part$Cancer, cptac_part$site_of_resection_or_biopsy) |&gt; print()\n  message(\"  tissue_or_organ_of_origin\")\n  table(cptac_part$Cancer, cptac_part$tissue_or_organ_of_origin) |&gt; print()\n}\n# BRCA (122): tissue_or_organ_of_origin \"Breast, NOS\"\n# CCRCC (103): primary_diagnosis \"Renal cell carcinoma, NOS\"\n#        tissue_or_organ_of_origin \"Kidney, NOS\"\n# COAD (106): tissue_or_organ_of_origin \"Colon, NOS\", \"Rectum, NOS\"\n# GBM (99): primary_diagnosis \"Glioblastoma\"\n# HGSC (87): primary_diagnosis \"Serous adenocarcinoma, NOS\" AND\n#  tissue_or_organ_of_origin Fallopian tube Ovary Peritoneum, NOS\n# HNSCC (108): 其他情况 primary_diagnosis \"Squamous cell carcinoma, NOS\"\n# Base of tongue, NOS Cheek mucosa Floor of mouth, NOS Gum, NOS\n# HNSCC                   1            2                  18        3\n#\n# Head, face or neck, NOS Larynx, NOS Lip, NOS Oropharynx, NOS\n# HNSCC                       2          47        4               4\n#\n# Overlapping lesion of lip, oral cavity and pharynx Tongue, NOS Tonsil, NOS\n# HNSCC\n# LSCC (108): primary_diagnosis \"Squamous cell carcinoma, NOS\" AND\n#   tissue_or_organ_of_origin \"lung\" pattern\n# LUAD (110): primary_diagnosis \"Adenocarcinoma, NOS\" AND\n#   tissue_or_organ_of_origin \"lung\" pattern\n# PDAC (105): tissue_or_organ_of_origin \"pancreas\" pattern\n# UCEC (95): primary_diagnosis \"Endometrioid adenocarcinoma, NOS\"\nsum(!is.na(cptac$Cancer))\n\n# rbind(cptac2, cptac3)[,192] # 有重复列，需要回到前面处理 (fixed)\n\n# 实际测试和更新\ncptac_updated = rbind(cptac2, cptac3) |&gt;\n  unique() |&gt;\n  dplyr::mutate(\n    Cancer = dplyr::case_when(\n      tissue_or_organ_of_origin %in% \"Breast, NOS\" ~ \"BRCA\",\n      primary_diagnosis %in% \"Renal cell carcinoma, NOS\" ~ \"CCRCC\",\n      tissue_or_organ_of_origin %in% c(\"Colon, NOS\", \"Rectum, NOS\") ~ \"COAD\",\n      grepl(\"Glioblastoma\", primary_diagnosis, ignore.case = TRUE) | grepl(\"Oligodendroglioma\", primary_diagnosis, ignore.case = TRUE) ~ \"GBM\",\n      grepl(\"GTEX\", case_submitter_id, ignore.case = TRUE) ~ \"GTEX-Brain\",\n      case_submitter_id %in% c(\"C3L-06912\", \"C3L-07212\") ~ \"GBM\",\n      #primary_diagnosis %in% \"Glioblastoma\" ~ \"GBM\",\n      primary_diagnosis %in% \"Serous adenocarcinoma, NOS\" & tissue_or_organ_of_origin %in% c(\"Fallopian tube\", \"Ovary\", \"Peritoneum, NOS\") ~ \"HGSC\",\n      primary_diagnosis %in% \"Squamous cell carcinoma, NOS\" & grepl(\"lung\", tissue_or_organ_of_origin, ignore.case = TRUE) ~ \"LSCC\",\n      primary_diagnosis %in% \"Adenocarcinoma, NOS\" & grepl(\"lung\", tissue_or_organ_of_origin, ignore.case = TRUE) ~ \"LUAD\",\n      grepl(\"pancreas\", tissue_or_organ_of_origin, ignore.case = TRUE) ~ \"PDAC\",\n      primary_diagnosis %in% \"Endometrioid adenocarcinoma, NOS\" ~ \"UCEC\",\n      TRUE ~ \"HNSCC\"\n    )\n  ) |&gt; as.data.table()\n\nfor (i in \"HNSCC\") { # typelist\n  message(\"check type \", i)\n  cptac_part = cptac_updated |&gt; dplyr::filter(Cancer == i)\n  message(\"  primary_diagnosis\")\n  table(cptac_part$Cancer, cptac_part$primary_diagnosis) |&gt; print()\n  message(\"  site_of_resection_or_biopsy\")\n  table(cptac_part$Cancer, cptac_part$site_of_resection_or_biopsy) |&gt; print()\n  message(\"  tissue_or_organ_of_origin\")\n  table(cptac_part$Cancer, cptac_part$tissue_or_organ_of_origin) |&gt; print()\n}\n\ntable(cptac$Cancer)\ntable(cptac_updated$Cancer)\n\ncptac_updated |&gt;\n  dplyr::filter(\n    primary_diagnosis == \"'--\" | site_of_resection_or_biopsy == \"'--\" |\n    tissue_or_organ_of_origin %in% c(\"'--\", \"Unknown\")\n  )\n# 1-9 from GTEX-Brain\n# C3L-06912 C3L-07212 Gliomas # https://portal.gdc.cancer.gov/cases/e6027623-a5b2-4d82-a9ca-f37c948dd3ed\ncptac_updated$case_submitter_id[grepl(\"GTEX\", cptac_updated$case_submitter_id)]\n\nnrow(cptac_updated)\n\nfwrite(cptac_updated, file = \"CPTAC_combined_with_cancer_annotated.tsv\", sep = \"\\t\")\n\ncptac_unmatched = cptac_updated[! case_submitter_id %in% cli.final$Sample_ID]\ncolnames(cptac_unmatched)\ncolnames(cli.final)[1:20]\n\ncptac_unmatched2 = cptac_unmatched |&gt;\n  dplyr::select(\n    case_submitter_id, age_at_diagnosis, gender,\n    days_to_death, vital_status,\n    dplyr::starts_with(\"ajcc\"),\n    dplyr::starts_with(\"days\"),\n    last_known_disease_status, progression_or_recurrence, residual_disease,\n    tumor_grade, Cancer\n  )\n\nsum(cptac_unmatched2$days_to_last_follow_up != \"'--\")\nsum(cptac_unmatched2$days_to_death != \"'--\")\nsum(cptac_unmatched2$days_to_recurrence != \"'--\")\nsum(cptac_unmatched2$days_to_last_known_disease_status != \"'--\")\n\nsum(cptac_unmatched2$progression_or_recurrence != \"'--\")\n\n\nsum(!is.na(cli.final$OS_Time))\nsum(!is.na(cli.final$PFS_Time))\nsum(cli.final$OS_Time &gt;= cli.final$PFS_Time, na.rm = TRUE)\ncli.final[cli.final$OS_Time &lt; cli.final$PFS_Time] |&gt; View()\n\nsum(as.integer(cptac_unmatched2$days_to_last_follow_up) &gt;= as.integer(cptac_unmatched2$days_to_last_known_disease_status), na.rm = TRUE)\n\ncptac_unmatched3 = cptac_unmatched2 |&gt;\n  dplyr::rename(\n    Sample_ID = case_submitter_id,\n    Age = age_at_diagnosis,\n    Sex = gender,\n    OS_Time = days_to_last_follow_up,\n    OS_Status = vital_status,\n    PFS_Time = days_to_last_known_disease_status,\n    PFS_Status = progression_or_recurrence,\n    Histologic_Grade = tumor_grade,\n    Path_Stage_pT = ajcc_pathologic_t,\n    Path_Stage_pN = ajcc_pathologic_n,\n    Stage = ajcc_pathologic_stage\n  ) |&gt;\n  dplyr::select(\n    Sample_ID, Age, Sex, OS_Time, OS_Status, PFS_Time, PFS_Status,\n    Path_Stage_pN:Path_Stage_pT,\n    Histologic_Grade, Cancer\n  ) |&gt;\n  dplyr::mutate(\n    Patient_ID = Sample_ID,\n    Age = as.integer(round(as.integer(Age) / 365)),\n    Sex = fcase(Sex %in% \"female\", \"F\",\n                Sex %in% \"male\", \"M\", default = NA_character_),\n    OS_Time = as.integer(OS_Time),\n    OS_Status = fcase(OS_Status %in% \"Alive\", 0L,\n                      OS_Status %in% \"Dead\", 1L, default = NA_integer_),\n    PFS_Time = as.integer(PFS_Time),\n    PFS_Status = fcase(PFS_Status %in% \"no\", 0L,\n                       PFS_Status %in% \"yes\", 1L, default = NA_integer_),\n    OS_Time = ifelse(OS_Time &lt; 0, NA_integer_, OS_Time),\n    Path_Stage_pN = fcase(\n      Path_Stage_pN %in% \"N0\", \"pN0\",\n      Path_Stage_pN %in% c(\"N1\", \"N1a\"), \"pN1\",\n      Path_Stage_pN %in% c(\"N2\", \"N2a\"), \"pN2\",\n      default = NA_character_\n    ),\n    Path_Stage_pT = fcase(\n      Path_Stage_pT %in% \"T0\", \"pT0\",\n      Path_Stage_pT %in% c(\"T1\", \"T1a\", \"T1b\", \"T1c\"), \"pT1\",\n      Path_Stage_pT %in% c(\"T2\", \"T2a\", \"T2b\"), \"pT2\",\n      Path_Stage_pT %in% c(\"T3\", \"T3a\", \"T3b\"), \"pT3\",\n      Path_Stage_pT %in% \"T4\", \"pT4\",\n      default = NA_character_\n    ),\n    Stage = fcase(\n      Stage %in% c(\"Stage I\", \"Stage IA\", \"Stage IA1\", \"Stage IA2\", \"Stage IA3\", \"Stage IB\"), \"Stage I\",\n      Stage %in% c(\"Stage II\", \"Stage IIA\", \"Stage IIB\"), \"Stage II\",\n      Stage %in% c(\"Stage III\", \"Stage IIIA\", \"Stage IIIB\", \"Stage IIIC\", \"Stage IIIC1\", \"Stage IIIC2\"), \"Stage III\",\n      Stage %in% c(\"Stage IV\", \"Stage IVB\"), \"Stage IV\",\n      default = NA_character_\n    ),\n    Histologic_Grade = fcase(\n      Histologic_Grade %in% \"G1\", \"G1 Well differentiated\",\n      Histologic_Grade %in% \"G2\", \"G2 Moderately differentiated\",\n      Histologic_Grade %in% \"G3\", \"G3 Poorly differentiated\",\n      Histologic_Grade %in% \"G4\", \"G4 Undifferentiated\",\n      default = NA_character_\n    )\n  )\n\ncptac_unmatched3\n\n# X: cannot be assessed\n\ntable(cptac_unmatched3$Path_Stage_pN)\ntable(cli.final$Path_Stage_pN)\n\ntable(cptac_unmatched3$Path_Stage_pT)\ntable(cli.final$Path_Stage_pT)\n\ntable(cptac_unmatched3$Stage)\ntable(cli.final$Stage)\n\ntable(cptac_unmatched3$Histologic_Grade)\ntable(cli.final$Histologic_Grade)\n\n\n\n# Final output ------------------------------------------------------------\n\ncli.final.2 = dplyr::bind_rows(\n  cli.final, cptac_unmatched3\n) |&gt; as.data.table()\n\ntable(cli.final.2$Cancer)\nsum(table(cli.final.2$Cancer))\n\n# Race 全部加进去？\ncli.final.2 = dplyr::left_join(\n  cli.final.2, unique(rbind(cptac2, cptac3)[, .(case_submitter_id, race)]),\n  by = c(\"Sample_ID\"=\"case_submitter_id\")\n) |&gt;\n  dplyr::mutate(\n    race = ifelse(race %in% c(\"Unknown\", \"not reported\"), NA_character_,\n                  race)\n  ) |&gt;\n  as.data.table()\n\nsum(is.na(cli.final.2$race))\n\nfwrite(cli.final.2, file = \"/home/data2/Projects/Fusion/fusiondb/Clininfo/CPTAC_info.tsv\", sep = \"\\t\")\n\n\nTARGET\nlibrary(data.table)\n\ncli1 = fread(\"TARGET_donor_allprojects_transfer_to_sample.gz\")\ncli2 = fread(\"TARGET_phenotype.gz\")\n\ntarget_cli = cli2 |&gt;\n  dplyr::select(-`_cohort`) |&gt;\n  dplyr::rename(Patient_ID = `_PATIENT`,\n                Sample_ID = sample_id,\n                disease_code = primary_disease_code,\n                disease = `_primary_disease`,\n                sample_type = `_sample_type`) |&gt;\n  dplyr::full_join(\n    cli1 |&gt; dplyr::select(\n      -`_OS_UNIT`, -`_EVENT`, -`_TIME_TO_EVENT`\n    ) |&gt;\n      dplyr::rename(\n        Sample_ID = xena_sample,\n        Sex = `_gender`,\n        Age = `_age_at_diagnosis`,\n        OS_Status = `_OS_IND`,\n        OS_Time = `_OS`\n      ), by = \"Sample_ID\"\n  ) |&gt;\n  dplyr::mutate(\n    Sex = ifelse(Sex == \"Male\", \"M\", \"F\"),\n    OS_Status = ifelse(OS_Status == \"Alive\", 0L, 1L)\n  ) |&gt;\n  dplyr::select(Patient_ID, Sample_ID, Age, Sex, OS_Time, OS_Status, dplyr::everything()) |&gt;\n  as.data.table()\n\ncli1\n\ntarget_cli\n\nfwrite(target_cli, file = \"/home/data2/Projects/Fusion/fusiondb/Clininfo/TARGET_xena_info.tsv\", sep = \"\\t\")\n\n\n# Using cli from GDC ------------------------------------------------------\n\nsystem(\"\ncd /home/data2/Projects/Fusion/unclean/gdc_cli/TARGET\nmkdir ALL_P1 ALL_P2 ALL_P3 AML CCSK NBL OS RT WT\ntar zxvf clinical.project-target-all-p1.2024-08-07.tar.gz -C ALL_P1\ntar zxvf clinical.project-target-all-p2.2024-08-07.tar.gz -C ALL_P2\ntar zxvf clinical.project-target-all-p3.2024-08-07.tar.gz -C ALL_P3\ntar zxvf clinical.project-target-aml.2024-08-07.tar.gz -C AML\ntar zxvf clinical.project-target-ccsk.2024-08-07.tar.gz -C CCSK\ntar zxvf clinical.project-target-nbl.2024-08-07.tar.gz -C NBL\ntar zxvf clinical.project-target-os.2024-08-07.tar.gz -C OS\ntar zxvf clinical.project-target-rt.2024-08-07.tar.gz -C RT\ntar zxvf clinical.project-target-wt.2024-08-07.tar.gz -C WT\n       \")\n\ngdc_target = rbindlist(\n  list(\n    fread(\"gdc_cli/TARGET/ALL_P1/clinical.tsv\"),\n    fread(\"gdc_cli/TARGET/ALL_P2/clinical.tsv\"),\n    fread(\"gdc_cli/TARGET/ALL_P3/clinical.tsv\"),\n    fread(\"gdc_cli/TARGET/AML/clinical.tsv\"),\n    fread(\"gdc_cli/TARGET/CCSK/clinical.tsv\"),\n    fread(\"gdc_cli/TARGET/NBL/clinical.tsv\"),\n    fread(\"gdc_cli/TARGET/OS/clinical.tsv\"),\n    fread(\"gdc_cli/TARGET/RT/clinical.tsv\"),\n    fread(\"gdc_cli/TARGET/WT/clinical.tsv\")\n  ),\n  use.names = TRUE, fill = TRUE\n)\n\ntable(gdc_target$project_id)\nany(duplicated(gdc_target))\ngdc_target = gdc_target[!duplicated(gdc_target)]\n\nall.equal(gdc_target[[119]], gdc_target[[192]])\ngdc_target[[192]] = NULL\n\nsum(gdc_target$days_to_last_follow_up != \"'--\")\nsum(gdc_target$days_to_death != \"'--\")\n\ngdc_target2 = gdc_target |&gt;\n  dplyr::rename(\n    Sample_ID = case_submitter_id,\n    Age = age_at_diagnosis,\n    Sex = gender,\n    OS_Time = days_to_death,\n    OS_Status = vital_status\n  ) |&gt;\n  dplyr::select(\n    Sample_ID, Age, Sex, OS_Time, OS_Status,\n    project_id, race, primary_diagnosis\n  ) |&gt;\n  dplyr::mutate(\n    Patient_ID = Sample_ID,\n    Age = as.integer(round(as.integer(Age) / 365)),\n    Sex = fcase(Sex %in% \"female\", \"F\",\n                Sex %in% \"male\", \"M\", default = NA_character_),\n    OS_Time = as.integer(OS_Time),\n    OS_Status = fcase(OS_Status %in% \"Alive\", 0L,\n                      OS_Status %in% \"Dead\", 1L, default = NA_integer_),\n    OS_Time = ifelse(OS_Time &lt; 0, NA_integer_, OS_Time)\n  ) |&gt;\n  as.data.table()\n\n#unique()\n\n# 存在大量 case level 重复\ngdc_target2[duplicated(gdc_target2), ]\nduplicated(gdc_target[case_submitter_id == \"TARGET-20-PANTIV\"])\ngdc_target[case_submitter_id == \"TARGET-20-PANTIV\"] |&gt; View() # 存在少量记录的更新？\n\ngdc_target2 = gdc_target2[!duplicated(gdc_target2)]\n\n#table(gdc_target2$PFS_Time)\nany(duplicated(gdc_target2))\nany(duplicated(gdc_target2$Sample_ID))\n\ngdc_target2[duplicated(gdc_target2$Sample_ID)]\n# 会存在不同 ALL 的 Project 中\ngdc_dup = gdc_target2[Sample_ID %in% Sample_ID[duplicated(Sample_ID)]]\ntable(gdc_dup$project_id)\n# TARGET-ALL-P1 TARGET-ALL-P2 TARGET-ALL-P3\n# 10            57            47\n#\n# 这种先不处理，如果 ALL 合并分析考虑去重\n\ncolnames(gdc_target2)\ngdc_target2 = gdc_target2[, c(\"Patient_ID\", \"Sample_ID\", \"Age\", \"Sex\", \"race\", \"primary_diagnosis\", \"OS_Time\", \"OS_Status\", \"project_id\")]\n\nfwrite(gdc_target2, file = \"/home/data2/Projects/Fusion/fusiondb/Clininfo/TARGET_info.tsv\", sep = \"\\t\")\n\nsum(!is.na(gdc_target2$OS_Time))\nsum(!is.na(cli1$`_OS`))\n\nnrow(na.omit(unique(target_cli[, .(Patient_ID, OS_Time, OS_Status)])))\nnrow(na.omit(unique(gdc_target2[, .(Patient_ID, OS_Time, OS_Status)])))"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "All the processed data can be accessed on the ImmunoFusion website. We collected ICB-related cancer data sets with tumor gene expression profiles from the dbGaP, EGA, EMBL-EBI and GSA databases. Following the accession instruction described in published ICB studies (table on the “Repository” page), we downloaded ICB patients’ RNA-Seq raw sequencing data, clinical information, and response outcome information from ICB studies (if available). Curated circRNA identification results are available at Zenodo (https://zenodo.org/doi/10.5281/zenodo.7969298). For requesting circRNA expression matrix or other types of data, please contact the leader, Jian-Guo Zhou."
  },
  {
    "objectID": "about.html#data-availability",
    "href": "about.html#data-availability",
    "title": "About",
    "section": "",
    "text": "All the processed data can be accessed on the ImmunoFusion website. We collected ICB-related cancer data sets with tumor gene expression profiles from the dbGaP, EGA, EMBL-EBI and GSA databases. Following the accession instruction described in published ICB studies (table on the “Repository” page), we downloaded ICB patients’ RNA-Seq raw sequencing data, clinical information, and response outcome information from ICB studies (if available). Curated circRNA identification results are available at Zenodo (https://zenodo.org/doi/10.5281/zenodo.7969298). For requesting circRNA expression matrix or other types of data, please contact the leader, Jian-Guo Zhou."
  },
  {
    "objectID": "about.html#citation",
    "href": "about.html#citation",
    "title": "About",
    "section": "Citation",
    "text": "Citation\nThe database is currently under submission for publication."
  },
  {
    "objectID": "about.html#contact",
    "href": "about.html#contact",
    "title": "About",
    "section": "Contact",
    "text": "Contact\nIf you find any bug or have any feature to request, please report it by email (Yankun Zhao mailto:23happytea@gmail.com, Shixiang Wang mailto:shixiang1994wang@gmail.com, Jianguo Zhou mailto:jianguo.zhou@zmu.edu.cn)."
  },
  {
    "objectID": "about.html#team",
    "href": "about.html#team",
    "title": "About",
    "section": "Team",
    "text": "Team\nOncoHarmony Network is a dynamic collaborative platform dedicated to advancing the frontier of cancer immunotherapy. Bringing together diverse teams from leading universities and research institutions, our network is committed to the exploration, mining, and integration of multi-omics data in the realm of cancer research. With a focus on fostering synergy among experts in the field, OncoHarmony Network aims to construct a comprehensive resource hub and cutting-edge tools for unraveling the complexities of tumor-immune interactions. Through collective knowledge and interdisciplinary collaboration, we strive to accelerate breakthroughs in the understanding and development of effective cancer therapies.\nCurrently led by Dr. Shixiang Wang and Dr. Jian-Guo Zhou.\nMore please visit our website."
  }
]